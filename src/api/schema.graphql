input CreateDojoClassInput {
	id: String!
}

input DeleteDojoClassInput {
	id: String!
}

type DojoClass {
	id: String!
	class: String
	created_by: String
	created_date: String
	google_slide: String
	meeting_url: String
	scheduled_date: String
}

type DojoClassConnection {
	items: [DojoClass]
	nextToken: String
}

type Mutation {
	createDojoClass(input: CreateDojoClassInput!): DojoClass
	updateDojoClass(input: UpdateDojoClassInput!): DojoClass
	deleteDojoClass(input: DeleteDojoClassInput!): DojoClass
}

type Query {
	getDojoClass(id: String!): DojoClass
	listDojoClasses(filter: TableDojoClassFilterInput, limit: Int, nextToken: String): DojoClassConnection
}

type Subscription {
	onCreateDojoClass(id: String, class_name: String, date_time: String): DojoClass
		@aws_subscribe(mutations: ["createDojoClass"])
	onUpdateDojoClass(id: String, class_name: String, date_time: String): DojoClass
		@aws_subscribe(mutations: ["updateDojoClass"])
	onDeleteDojoClass(id: String, class_name: String, date_time: String): DojoClass
		@aws_subscribe(mutations: ["deleteDojoClass"])
}

input TableBooleanFilterInput {
	ne: Boolean
	eq: Boolean
}

input TableDojoClassFilterInput {
	id: TableStringFilterInput
	class_name: TableStringFilterInput
	date_time: TableStringFilterInput
}

input TableFloatFilterInput {
	ne: Float
	eq: Float
	le: Float
	lt: Float
	ge: Float
	gt: Float
	contains: Float
	notContains: Float
	between: [Float]
}

input TableIDFilterInput {
	ne: ID
	eq: ID
	le: ID
	lt: ID
	ge: ID
	gt: ID
	contains: ID
	notContains: ID
	between: [ID]
	beginsWith: ID
}

input TableIntFilterInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	contains: Int
	notContains: Int
	between: [Int]
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
}

input UpdateDojoClassInput {
	id: String!
	class_name: String
	date_time: String
}